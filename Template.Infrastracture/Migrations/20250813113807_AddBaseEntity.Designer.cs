// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using ReportsBackend.Infrastracture.Data.Context;

#nullable disable

namespace ReportsBackend.Infrastracture.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250813113807_AddBaseEntity")]
    partial class AddBaseEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReportsBackend.Domain.Entities.Privilege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PATH");

                    b.HasKey("Id");

                    b.ToTable("DASH_PRIVILEGES");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("ACTIVE");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATEDAT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CREATEDBY");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DELETEDAT");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DELETEDBY");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("DetailColumn")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DETAILCOLUMN");

                    b.Property<int?>("DetailId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DETAILID");

                    b.Property<bool>("HasDetail")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("HASDETAIL");

                    b.Property<bool>("Hide")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("HIDE");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("ISDELETED");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME");

                    b.Property<string>("Path")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PATH");

                    b.Property<int?>("PrivilegeId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PRIVILEGEID");

                    b.Property<string>("Query")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("QUERY");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATEDAT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("UPDATEDBY");

                    b.HasKey("Id");

                    b.HasIndex("PrivilegeId");

                    b.ToTable("DASH_REPORTS");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.ReportColumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Field")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("FIELD");

                    b.Property<string>("Filter")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("FILTER");

                    b.Property<bool>("FloatingFilter")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("FLOATINGFILTER");

                    b.Property<string>("HeaderName")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("HEADERNAME");

                    b.Property<bool>("Hide")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("HIDE");

                    b.Property<bool>("IsMaster")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("ISMASTER");

                    b.Property<int>("ReportId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("REPORTID");

                    b.Property<bool>("Resizable")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("RESIZABLE");

                    b.Property<bool>("RowGroup")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("ROWGROUP");

                    b.Property<int>("Sort")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SORT");

                    b.Property<bool>("Sortable")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("SORTABLE");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("DASH_REPORTCOLUMNS");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.ReportParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DataType")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DATATYPE");

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DEFAULTVALUE");

                    b.Property<string>("DisplayName")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DISPLAYNAME");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("ISREQUIRED");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME");

                    b.Property<string>("ParameterType")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PARAMETERTYPE");

                    b.Property<string>("QueryForDropdown")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("QUERYFORDROPDOWN");

                    b.Property<int>("ReportId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("REPORTID");

                    b.Property<int?>("Sort")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SORT");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("DASH_REPORTPARAMETERS");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME");

                    b.Property<bool>("Status")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("STATUS");

                    b.HasKey("Id");

                    b.ToTable("DASH_ROLES");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.RoleReport", b =>
                {
                    b.Property<int>("ReportId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("REPORTID");

                    b.Property<int>("RoleId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROLEID");

                    b.HasKey("ReportId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("DASH_ROLEREPORTS");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.RoleScreen", b =>
                {
                    b.Property<int>("ScreenId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SCREENID");

                    b.Property<int>("RoleId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROLEID");

                    b.HasKey("ScreenId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("DASH_ROLESCREENS");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.Screen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PATH");

                    b.HasKey("Id");

                    b.ToTable("DASH_SCREENS");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ADDRESS");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATEOFBIRTH");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("GENDER");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("GRADE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PHONENUMBER");

                    b.HasKey("Id");

                    b.ToTable("DASH_STUDENTS");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.StudentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AcademicAdvisor")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ACADEMICADVISOR");

                    b.Property<string>("AdditionalNotes")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ADDITIONALNOTES");

                    b.Property<string>("EmergencyContactName")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EMERGENCYCONTACTNAME");

                    b.Property<string>("EmergencyContactPhone")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EMERGENCYCONTACTPHONE");

                    b.Property<string>("HealthInformation")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("HEALTHINFORMATION");

                    b.Property<int>("StudentId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("STUDENTID");

                    b.HasKey("Id");

                    b.ToTable("DASH_STUDENTDETAILS");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PASSWORDHASH");

                    b.Property<bool>("Status")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("STATUS");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id");

                    b.ToTable("DASH_USERS");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("USERID");

                    b.Property<int>("RoleId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROLEID");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("DASH_USERROLES");
                });

            modelBuilder.Entity("Template.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CATEGORYID");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CATEGORYNAME");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("EXPIRATIONDATE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NAME");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("PRICE");

                    b.HasKey("Id");

                    b.ToTable("DASH_PRODUCTS");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.Report", b =>
                {
                    b.HasOne("ReportsBackend.Domain.Entities.Privilege", "Privilege")
                        .WithMany("Reports")
                        .HasForeignKey("PrivilegeId");

                    b.Navigation("Privilege");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.ReportColumn", b =>
                {
                    b.HasOne("ReportsBackend.Domain.Entities.Report", "Report")
                        .WithMany("Columns")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.ReportParameter", b =>
                {
                    b.HasOne("ReportsBackend.Domain.Entities.Report", "Report")
                        .WithMany("Parameters")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.RoleReport", b =>
                {
                    b.HasOne("ReportsBackend.Domain.Entities.Report", "Report")
                        .WithMany("RoleReports")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReportsBackend.Domain.Entities.Role", "Role")
                        .WithMany("RoleReports")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.RoleScreen", b =>
                {
                    b.HasOne("ReportsBackend.Domain.Entities.Role", "Role")
                        .WithMany("RoleScreens")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReportsBackend.Domain.Entities.Screen", "Screen")
                        .WithMany("RoleScreens")
                        .HasForeignKey("ScreenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Screen");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("ReportsBackend.Domain.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReportsBackend.Domain.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.Privilege", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.Report", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Parameters");

                    b.Navigation("RoleReports");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.Role", b =>
                {
                    b.Navigation("RoleReports");

                    b.Navigation("RoleScreens");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.Screen", b =>
                {
                    b.Navigation("RoleScreens");
                });

            modelBuilder.Entity("ReportsBackend.Domain.Entities.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
